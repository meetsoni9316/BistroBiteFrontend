Design a Blog Layout Using Both CSS Box Model and Flexbox

Build a responsive blog page with the following layout:

    Header: Create a full-width header section containing a blog title and a navigation bar. Use Flexbox to align and space out the navigation links.
    Content Area: Include two sections: a main content section for blog posts and a sidebar for additional widgets/links. Use Flexbox to place them side by side. Set widths using the Box Model (e.g., a main content area width of 70% and a sidebar width of 30%). Add padding, margins, and borders to simulate realistic spacing and design.
    Footer: Add a footer section containing copyright text and social media links. Use Flexbox to center-align the content within the footer.

Functional Flow:

- Ensure the layout is fully responsive, adapting to different screen sizes using Flexbox properties like flex-wrap and media queries.
- Use distinct colors and borders around each component (header, content, sidebar, footer) to demonstrate your understanding of the Box Model.
Business Logic:

- The content area should be scrollable if its height exceeds the viewport height.
- The navigation bar should collapse into a vertical layout on smaller screens (e.g., mobile devices) using media queries.
- All elements should have appropriate margins, paddings, and borders to create a visually appealing layout.
Objective:

Develop a comprehensive understanding of combining the CSS Box Model and Flexbox to build modern, responsive web layouts.
